{"code":"import styled from \"./styled\";\r\nimport { css } from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { hexToP3 } from \"../utils/p3\";\r\nimport predefinedThemes from \"./themes\";\r\n/**\r\n * Theme variables for the modal\r\n */\r\nconst themeGlobals = {\r\n    default: {\r\n        \"--ck-font-family\": `-apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica,\n    'Apple Color Emoji', Arial, sans-serif, 'Segoe UI Emoji',\n    'Segoe UI Symbol'`,\r\n        \"--ck-border-radius\": \"20px\",\r\n        \"--ck-secondary-button-border-radius\": \"16px\",\r\n    },\r\n    graphics: {\r\n        light: {\r\n            \"--ck-graphic-wave-stop-01\": \"#E8F17D\",\r\n            \"--ck-graphic-wave-stop-02\": \"#A8ECDE\",\r\n            \"--ck-graphic-wave-stop-03\": \"#7AA1F2\",\r\n            \"--ck-graphic-wave-stop-04\": \"#DEA1E8\",\r\n            \"--ck-graphic-wave-stop-05\": \"#F46D98\",\r\n            \"--ck-graphic-scaniconwithlogos-01\": \"#4E4E4E\",\r\n            \"--ck-graphic-scaniconwithlogos-02\": \"#272727\",\r\n            \"--ck-graphic-scaniconwithlogos-03\": \"#F8D74A\",\r\n            \"--ck-graphic-scaniconwithlogos-04\": \"#F6F7F9\",\r\n            \"--ck-chain-ethereum-01\": \"#25292E\",\r\n            \"--ck-chain-ethereum-02\": \"#fff\",\r\n            \"--ck-chain-ethereum-03\": \"#DFE0E0\",\r\n        },\r\n        dark: {\r\n            \"--ck-graphic-wave-stop-01\": \"#E8F17D\",\r\n            \"--ck-graphic-wave-stop-02\": \"#A8ECDE\",\r\n            \"--ck-graphic-wave-stop-03\": \"#7AA1F2\",\r\n            \"--ck-graphic-wave-stop-04\": \"#DEA1E8\",\r\n            \"--ck-graphic-wave-stop-05\": \"#F46D98\",\r\n            \"--ck-graphic-scaniconwithlogos-01\": \"#AFAFAF\",\r\n            \"--ck-graphic-scaniconwithlogos-02\": \"#696969\",\r\n            \"--ck-graphic-scaniconwithlogos-03\": \"#F8D74A\",\r\n            \"--ck-graphic-scaniconwithlogos-04\": \"#3D3D3D\",\r\n            //'--ck-chain-ethereum-01': '#fff',\r\n            //'--ck-chain-ethereum-02': '#000',\r\n            //'--ck-chain-ethereum-03': '#000',\r\n        },\r\n    },\r\n    ens: {\r\n        light: {\r\n            \"--ck-ens-01-start\": \"#FF3B30\",\r\n            \"--ck-ens-01-stop\": \"#FF9500\",\r\n            \"--ck-ens-02-start\": \"#FF9500\",\r\n            \"--ck-ens-02-stop\": \"#FFCC00\",\r\n            \"--ck-ens-03-start\": \"#FFCC00\",\r\n            \"--ck-ens-03-stop\": \"#34C759\",\r\n            \"--ck-ens-04-start\": \"#5856D6\",\r\n            \"--ck-ens-04-stop\": \"#AF52DE\",\r\n            \"--ck-ens-05-start\": \"#5AC8FA\",\r\n            \"--ck-ens-05-stop\": \"#007AFF\",\r\n            \"--ck-ens-06-start\": \"#007AFF\",\r\n            \"--ck-ens-06-stop\": \"#5856D6\",\r\n            \"--ck-ens-07-start\": \"#5856D6\",\r\n            \"--ck-ens-07-stop\": \"#AF52DE\",\r\n            \"--ck-ens-08-start\": \"#AF52DE\",\r\n            \"--ck-ens-08-stop\": \"#FF2D55\",\r\n        },\r\n        dark: {\r\n            \"--ck-ens-01-start\": \"#FF453A\",\r\n            \"--ck-ens-01-stop\": \"#FF9F0A\",\r\n            \"--ck-ens-02-start\": \"#FF9F0A\",\r\n            \"--ck-ens-02-stop\": \"#FFD60A\",\r\n            \"--ck-ens-03-start\": \"#FFD60A\",\r\n            \"--ck-ens-03-stop\": \"#32D74B\",\r\n            \"--ck-ens-04-start\": \"#32D74B\",\r\n            \"--ck-ens-04-stop\": \"#64D2FF\",\r\n            \"--ck-ens-05-start\": \"#64D2FF\",\r\n            \"--ck-ens-05-stop\": \"#0A84FF\",\r\n            \"--ck-ens-06-start\": \"#0A84FF\",\r\n            \"--ck-ens-06-stop\": \"#5E5CE6\",\r\n            \"--ck-ens-07-start\": \"#5E5CE6\",\r\n            \"--ck-ens-07-stop\": \"#BF5AF2\",\r\n            \"--ck-ens-08-start\": \"#BF5AF2\",\r\n            \"--ck-ens-08-stop\": \"#FF2D55\",\r\n        },\r\n    },\r\n    brand: {\r\n        \"--ck-family-brand\": \"#1A88F8\",\r\n        \"--ck-brand-walletConnect\": \"#3B99FC\",\r\n        \"--ck-brand-coinbaseWallet\": \"#0052FF\",\r\n        \"--ck-brand-metamask\": \"#f6851b\",\r\n        \"--ck-brand-metamask-01\": \"#F6851B\",\r\n        \"--ck-brand-metamask-02\": \"#E2761B\",\r\n        \"--ck-brand-metamask-03\": \"#CD6116\",\r\n        \"--ck-brand-metamask-04\": \"#161616\",\r\n        \"--ck-brand-metamask-05\": \"#763D16\",\r\n        \"--ck-brand-metamask-06\": \"#D7C1B3\",\r\n        \"--ck-brand-metamask-07\": \"#C0AD9E\",\r\n        \"--ck-brand-metamask-08\": \"#E4761B\",\r\n        \"--ck-brand-metamask-09\": \"#233447\",\r\n        \"--ck-brand-metamask-10\": \"#E4751F\",\r\n        \"--ck-brand-metamask-11\": \"#FEF5E7\",\r\n        \"--ck-brand-metamask-12\": \"#E3C8AB\",\r\n        \"--ck-brand-trust-01\": \"#3375BB\",\r\n        \"--ck-brand-trust-02\": \"#ffffff\",\r\n        \"--ck-brand-trust-01b\": \"#ffffff\",\r\n        \"--ck-brand-trust-02b\": \"#3375BB\",\r\n        \"--ck-brand-argent\": \"#f36a3d\",\r\n        \"--ck-brand-imtoken-01\": \"#11C4D1\",\r\n        \"--ck-brand-imtoken-02\": \"#0062AD\",\r\n        \"--ck-brand-gnosisSafe\": \"#12FF80\",\r\n        \"--ck-brand-dawn\": \"#000000\",\r\n    },\r\n};\r\nconst themeColors = {\r\n    light: predefinedThemes.base.light,\r\n    dark: predefinedThemes.base.dark,\r\n    web95: predefinedThemes.web95,\r\n    retro: predefinedThemes.retro,\r\n    soft: predefinedThemes.soft,\r\n    midnight: predefinedThemes.midnight,\r\n    minimal: predefinedThemes.minimal,\r\n    rounded: predefinedThemes.rounded,\r\n    nouns: predefinedThemes.nouns,\r\n};\r\n/**\r\n *  Automatically use p3 if available\r\n */\r\n//  TODO: Don't use :any type\r\nconst createCssVars = (scheme, important) => {\r\n    return css `\n    ${Object.keys(scheme).map((key) => {\r\n        const value = scheme[key];\r\n        return value && `${key}:${value};`;\r\n    })}\n  `;\r\n};\r\nconst createCssColors = (scheme, override) => {\r\n    const important = override ? \" !important\" : \"\";\r\n    return css `\n    ${Object.keys(scheme).map((key) => {\r\n        const value = scheme[key];\r\n        return value && `${key}:${value}${important};`;\r\n    })}\n    @supports (color: color(display-p3 1 1 1)) {\n      ${Object.keys(scheme).map((key) => {\r\n        const value = scheme[key];\r\n        return `${key}:${hexToP3(value)}${important};`;\r\n    })}\n    }\n  `;\r\n};\r\nconst themes = {\r\n    default: createCssVars(themeGlobals.default),\r\n    light: createCssColors(themeColors.light),\r\n    dark: createCssColors(themeColors.dark),\r\n    web95: createCssColors(themeColors.web95),\r\n    retro: createCssColors(themeColors.retro),\r\n    soft: createCssColors(themeColors.soft),\r\n    midnight: createCssColors(themeColors.midnight),\r\n    minimal: createCssColors(themeColors.minimal),\r\n    rounded: createCssColors(themeColors.rounded),\r\n    nouns: createCssColors(themeColors.nouns),\r\n};\r\nconst globals = {\r\n    brand: createCssVars(themeGlobals.brand),\r\n    ensLight: createCssVars(themeGlobals.ens.light),\r\n    ensDark: createCssVars(themeGlobals.ens.dark),\r\n    graphicsLight: createCssVars(themeGlobals.graphics.light),\r\n    graphicsDark: createCssVars(themeGlobals.graphics.dark),\r\n};\r\nconst globalsLight = css `\n  ${globals.brand}\n  ${globals.ensLight}\n  ${globals.graphicsLight}\n`;\r\nconst globalsDark = css `\n  ${globals.brand}\n  ${globals.ensDark}\n  ${globals.graphicsDark}\n`;\r\n/*\r\n *  Reset stylings to avoid conflicting with the parent websites styling\r\n * Automatically apply theme based on system theme\r\n */\r\n// TODO: Think more about how to reset our components as to not be affected by external stylings\r\n// TODO: Merge theme objects instead of overriding\r\nlet mode = \"auto\";\r\nexport const ResetContainer = styled(motion.div).withConfig({ displayName: \"ResetContainer\", componentId: \"-bjpgwr\" }) `\n  ${themes.default}\n\n  ${(props) => {\r\n    switch (props.$useTheme) {\r\n        case \"web95\":\r\n            mode = \"light\";\r\n            return themes.web95;\r\n        case \"retro\":\r\n            mode = \"light\";\r\n            return themes.retro;\r\n        case \"soft\":\r\n            mode = \"light\";\r\n            return themes.soft;\r\n        case \"midnight\":\r\n            mode = \"dark\";\r\n            return themes.midnight;\r\n        case \"minimal\":\r\n            mode = \"light\";\r\n            return themes.minimal;\r\n        case \"rounded\":\r\n            mode = \"light\";\r\n            return themes.rounded;\r\n        case \"nouns\":\r\n            mode = \"light\";\r\n            return themes.nouns;\r\n        default:\r\n            if (props.$useMode === \"light\") {\r\n                mode = \"light\";\r\n                return themes.light;\r\n            }\r\n            else if (props.$useMode === \"dark\") {\r\n                mode = \"dark\";\r\n                return themes.dark;\r\n            }\r\n            else {\r\n                return css `\n            @media (prefers-color-scheme: light) {\n              ${themes.light}\n            }\n            @media (prefers-color-scheme: dark) {\n              ${themes.dark}\n            }\n          `;\r\n            }\r\n    }\r\n}}\n\n  ${(props) => {\r\n    switch (mode) {\r\n        case \"light\":\r\n            return globalsLight;\r\n        case \"dark\":\r\n            return globalsDark;\r\n        default:\r\n            return css `\n          ${globalsLight}\n          @media (prefers-color-scheme: dark) {\n            ${globalsDark}\n          }\n        `;\r\n    }\r\n}}\n\n\n  ${(props) => {\r\n    var _a;\r\n    if (props.$customTheme &&\r\n        props.$customTheme[\"--ck-accent-color\"] &&\r\n        [\"light\", \"dark\", \"auto\", \"\", undefined].includes(props.$useTheme)) {\r\n        const accentColor = props.$customTheme[\"--ck-accent-color\"];\r\n        const accentTextColor = (_a = props.$customTheme[\"--ck-accent-text-color\"]) !== null && _a !== void 0 ? _a : \"#ffffff\";\r\n        return {\r\n            \"--ck-accent-color\": accentColor,\r\n            \"--ck-accent-text-color\": accentTextColor,\r\n            // '--ck-connectbutton-color': accentTextColor,\r\n            // '--ck-connectbutton-background': accentColor,\r\n            // '--ck-connectbutton-background-hover': accentColor,\r\n            // '--ck-connectbutton-background-active': LightenDarkenColor(\r\n            // accentColor,\r\n            // 20\r\n            // ),\r\n            \"--ck-secondary-button-background\": accentColor,\r\n            \"--ck-secondary-button-hover-background\": accentColor,\r\n            \"--ck-secondary-button-color\": accentTextColor,\r\n            \"--ck-button-primary-color\": accentTextColor,\r\n            \"--ck-focus-color\": accentColor,\r\n        };\r\n    }\r\n    if (props.$customTheme) {\r\n        return createCssColors(props.$customTheme, true);\r\n    }\r\n}}\n\n  all: initial;\n  text-align: left;\n  text-direction: ltr;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-text-stroke: 0.001px transparent;\n  text-size-adjust: none;\n  font-size: 16px;\n\n  button {\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-text-stroke: 0.001px transparent;\n  }\n\n  &,\n  * {\n    font-family: var(--ck-font-family);\n    box-sizing: border-box;\n    outline: none;\n    border: none;\n  }\n  /*\n  @media (prefers-reduced-motion) {\n    * {\n      animation-duration: 60ms !important;\n      transition-duration: 60ms !important;\n    }\n  }\n  */\n  img,\n  svg {\n    max-width: 100%;\n  }\n  strong {\n    font-weight: 600;\n  }\n  a:focus-visible,\n  button:focus-visible {\n    outline: 2px solid var(--ck-focus-color);\n  }\n`;\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/styles/styled/index.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/styled-components/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/framer-motion/dist/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/utils/p3.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/styles/themes/index.ts"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/styles/index.d.ts","writeByteOrderMark":false,"text":"export declare const ResetContainer: any;\r\n"}}
