{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { ThemeContainer, Container } from \"./styles\";\r\nimport useMeasure from \"react-use-measure\";\r\nexport const PlaceholderButton = () => {\r\n    return _jsx(\"div\", { style: { height: 40 } });\r\n};\r\nconst ThemedButton = ({ children, variant = \"primary\", autoSize = true, duration = 0.3, style, }) => {\r\n    const [contentRef, bounds] = useMeasure();\r\n    return (_jsx(Container, { className: variant, initial: false, animate: autoSize\r\n            ? {\r\n                width: bounds.width > 10 ? bounds.width : \"auto\",\r\n            }\r\n            : undefined, transition: {\r\n            duration: duration,\r\n            ease: [0.25, 1, 0.5, 1],\r\n            delay: 0.01,\r\n        }, style: style, children: _jsx(\"div\", { ref: contentRef, style: {\r\n                whiteSpace: \"nowrap\",\r\n                width: \"fit-content\",\r\n                position: \"relative\",\r\n                padding: \"0 12px\",\r\n            }, children: children }) }));\r\n};\r\nexport default ThemedButton;\r\nexport { ThemeContainer };\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/react/ts5.0/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/ThemedButton/styles.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/react-use-measure/types/index.d.ts"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/components/Common/ThemedButton/index.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\nimport { ThemeContainer } from \"./styles\";\r\ntype ThemedButtonProps = {\r\n    children?: React.ReactNode;\r\n    variant?: \"primary\" | \"secondary\" | \"tertiary\";\r\n    autoSize?: boolean;\r\n    duration?: number;\r\n    style?: React.CSSProperties;\r\n    onClick?: () => void;\r\n};\r\nexport declare const PlaceholderButton: () => import(\"react/jsx-runtime\").JSX.Element;\r\ndeclare const ThemedButton: React.FC<ThemedButtonProps>;\r\nexport default ThemedButton;\r\nexport { ThemeContainer };\r\n"}}
