{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { Container, WalletList, WalletItem, WalletIcon, WalletLabel } from \"./styles\";\r\nimport { PageContent, ModalContent } from \"../../Common/Modal/styles\";\r\nimport useDefaultWallets from \"../../../wallets/useDefaultWallets\";\r\nimport { routes, useContext } from \"../../ConnectWSC\";\r\nimport CopyToClipboard from \"../../Common/CopyToClipboard\";\r\nconst MoreIcon = (_jsx(\"svg\", { width: \"60\", height: \"60\", viewBox: \"0 0 60 60\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M30 42V19M19 30.5H42\", stroke: \"var(--ck-body-color-muted)\", strokeWidth: \"3\", strokeLinecap: \"round\" }) }));\r\nconst MobileConnectors = () => {\r\n    const context = useContext();\r\n    const wallets = useDefaultWallets().filter((wallet) => wallet.installed === undefined);\r\n    const connectWallet = (wallet) => {\r\n        if (wallet.installed) {\r\n            context.setRoute(routes.CONNECT);\r\n            context.setConnector(wallet.id);\r\n        }\r\n        else {\r\n            //if (uri) window.open(uri, '_blank');\r\n        }\r\n    };\r\n    return (_jsx(PageContent, { style: { width: 312 }, children: _jsxs(Container, { children: [_jsx(ModalContent, { children: _jsx(WalletList, { children: wallets.map((wallet, i) => {\r\n                            var _a;\r\n                            const { name, shortName, logos, logoBackground } = wallet;\r\n                            return (_jsxs(WalletItem, { onClick: () => connectWallet(wallet), style: {\r\n                                    animationDelay: `${i * 50}ms`,\r\n                                }, children: [_jsx(WalletIcon, { \"$outline\": true, style: logoBackground\r\n                                            ? {\r\n                                                background: logoBackground,\r\n                                            }\r\n                                            : undefined, children: (_a = logos.mobile) !== null && _a !== void 0 ? _a : logos.default }), _jsx(WalletLabel, { children: shortName !== null && shortName !== void 0 ? shortName : name })] }, i));\r\n                        }) }) }), _jsx(\"div\", { style: {\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        gap: 14,\r\n                        paddingTop: 16,\r\n                    }, children: _jsx(CopyToClipboard, { variant: \"button\", string: \"random\", children: \"Copy to clipboard\" }) })] }) }));\r\n};\r\nexport default MobileConnectors;\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/react/ts5.0/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Pages/MobileConnectors/styles.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/Modal/styles.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/wallets/useDefaultWallets.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/ConnectWSC.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/wallets/wallet.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/CopyToClipboard/index.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/Spinner/index.tsx"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/components/Pages/MobileConnectors/index.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\ndeclare const MobileConnectors: React.FC;\r\nexport default MobileConnectors;\r\n"}}
