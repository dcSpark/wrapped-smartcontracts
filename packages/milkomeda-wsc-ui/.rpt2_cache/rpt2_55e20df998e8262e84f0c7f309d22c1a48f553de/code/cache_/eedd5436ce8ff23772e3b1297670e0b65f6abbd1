{"code":"import { motion } from \"framer-motion\";\r\nimport styled from \"../../../styles/styled\";\r\nimport { css } from \"styled-components\";\r\nimport defaultTheme from \"../../../constants/defaultTheme\";\r\nexport const SpinnerContainer = styled(motion.div).withConfig({ displayName: \"SpinnerContainer\", componentId: \"-haahok\" }) `\n  position: absolute;\n  right: 16px;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\r\nexport const Arrow = styled.svg.withConfig({ displayName: \"Arrow\", componentId: \"-13evc9r\" }) `\n  --x: -3px;\n  --stroke-width: 2;\n  position: relative;\n  top: 1px;\n  left: -0.5px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: 9px;\n  margin-right: 1px;\n  transition: all 100ms ease;\n  transform: translateX(var(--x, -3px));\n  color: var(--ck-secondary-button-color, var(--ck-body-color));\n  opacity: 0.4;\n`;\r\nexport const ArrowChevron = styled.path.withConfig({ displayName: \"ArrowChevron\", componentId: \"-1yygzne\" }) ``;\r\nexport const ArrowLine = styled.line.withConfig({ displayName: \"ArrowLine\", componentId: \"-fzsk07\" }) `\n  transition: inherit;\n  transition-property: transform;\n  transform-origin: 90% 50%;\n  transform: scaleX(0.1);\n`;\r\nexport const DownloadArrow = styled.div.withConfig({ displayName: \"DownloadArrow\", componentId: \"-3pimua\" }) `\n  display: inline-block;\n  vertical-align: middle;\n  position: relative;\n  margin-right: 6px;\n  color: var(--ck-secondary-button-color, var(--ck-body-color));\n`;\r\nexport const DownloadArrowInner = styled.div.withConfig({ displayName: \"DownloadArrowInner\", componentId: \"-ga2f3w\" }) `\n  transform: rotate(90deg);\n  ${Arrow} {\n    margin: 0 auto;\n  }\n`;\r\nexport const ButtonContainerInner = styled(motion.div).withConfig({ displayName: \"ButtonContainerInner\", componentId: \"-gj4ojw\" }) `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  inset: 0;\n  height: 100%;\n`;\r\nexport const ButtonContainer = styled.button.withConfig({ displayName: \"ButtonContainer\", componentId: \"-ube0yn\" }) `\n\n  ${({ disabled }) => disabled &&\r\n    css `\n      cursor: not-allowed;\n      pointer-events: none;\n      ${InnerContainer} {\n        opacity: 0.4;\n      }\n    `}\n\n  ${({ $variant }) => {\r\n    if ($variant === \"primary\") {\r\n        return css `\n        --color: var(--ck-primary-button-color, var(--ck-body-color));\n        --background: var(--ck-primary-button-background, var(--ck-body-background-primary));\n        --box-shadow: var(--ck-primary-button-box-shadow);\n        --border-radius: var(--ck-primary-button-border-radius);\n        --font-weight: var(--ck-primary-button-font-weight, 500);\n\n        --hover-color: var(--ck-button-primary-hover-color, var(--color));\n        --hover-background: var(--ck-primary-button-hover-background, var(--background));\n        --hover-box-shadow: var(--ck-primary-button-hover-box-shadow, var(--box-shadow));\n        --hover-border-radius: var(--ck-primary-button-hover-border-radius, var(--border-radius));\n        --hover-font-weight: var(--ck-primary-button-font-weight, var(--font-weight));\n      `;\r\n    }\r\n    else if ($variant === \"secondary\") {\r\n        return css `\n        --color: var(--ck-secondary-button-color, var(--ck-body-color));\n        --background: var(--ck-secondary-button-background, var(--ck-body-background-secondary));\n        --box-shadow: var(--ck-secondary-button-box-shadow);\n        --border-radius: var(--ck-secondary-button-border-radius);\n        --font-weight: var(--ck-secondary-button-font-weight, 500);\n\n        --hover-color: var(--ck-secondary-button-hover-color, var(--color));\n        --hover-background: var(--ck-secondary-button-hover-background, var(--background));\n        --hover-box-shadow: var(--ck-secondary-button-hover-box-shadow, var(--box-shadow));\n        --hover-border-radius: var(\n          --ck-secondary-button-hover-border-radius,\n          var(--border-radius)\n        );\n        --hover-font-weight: var(--ck-secondary-button-font-weight, var(--font-weight));\n      `;\r\n    }\r\n    else if ($variant === \"tertiary\") {\r\n        return css `\n        --color: var(--ck-tertiary-button-color, var(--ck-secondary-button-color));\n        --background: var(--ck-tertiary-button-background, var(--ck-secondary-button-background));\n        --box-shadow: var(--ck-tertiary-button-box-shadow, var(--ck-secondary-button-box-shadow));\n        --border-radius: var(\n          --ck-tertiary-button-border-radius,\n          var(--ck-secondary-button-border-radius)\n        );\n        --font-weight: var(\n          --ck-tertiary-button-font-weight,\n          var(--ck-secondary-button-font-weight)\n        );\n\n        --hover-color: var(--button-tertiary-hover-color, var(--ck-tertiary-button-color));\n        --hover-background: var(\n          --ck-tertiary-button-hover-background,\n          var(--ck-tertiary-button-background)\n        );\n        --hover-box-shadow: var(\n          --ck-tertiary-button-hover-box-shadow,\n          var(--ck-tertiary-button-box-shadow)\n        );\n        --hover-border-radius: var(\n          --ck-tertiary-button-hover-border-radius,\n          var(--ck-tertiary-button-border-radius, var(--border-radius))\n        );\n        --hover-font-weight: var(\n          --ck-tertiary-button-font-weight,\n          var(--ck-secondary-button-font-weight)\n        );\n      `;\r\n    }\r\n}}\n\n  appearance: none;\n  cursor: pointer;\n  user-select: none;\n  min-width: fit-content;\n  width: 100%;\n  display:block;\n  text-align: center;\n  height: 48px;\n  margin: 12px 0 0;\n  line-height: 48px;\n  padding: 0 4px;\n  font-size: 16px;\n  font-weight: var(--font-weight,500);\n  text-decoration: none;\n  white-space: nowrap;\n  transition: 100ms ease;\n  transition-property: box-shadow, background-color;\n  color: var(--color);\n  background: var(--background);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  will-change: transform, box-shadow, background-color, color;\n\n  ${DownloadArrow} {\n    ${Arrow} {\n      transform: translateX(0);\n      ${ArrowLine} {\n        transform: none;\n      }\n      ${ArrowChevron} {\n      }\n    }\n  }\n}\n\n  @media only screen and (min-width: ${defaultTheme.mobileWidth + 1}px) {\n    &:hover,\n    &:focus-visible {\n      color: var(--ck-accent-text-color, var(--hover-color));\n      background: var(--ck-accent-color, var(--hover-background));\n      border-radius: var(--hover-border-radius);\n      box-shadow: var(--hover-box-shadow);\n\n      ${Arrow} {\n        transform: translateX(0);\n        ${ArrowLine} {\n          transform: none;\n        }\n        ${ArrowChevron} {\n        }\n      }\n      ${DownloadArrow} {\n        ${Arrow} {\n          transform: translateX(var(--x));\n          ${ArrowLine} {\n            transform: scaleX(0.1);\n          }\n          ${ArrowChevron} {\n          }\n        }\n      }\n    }\n    &:active {\n      box-shadow: var(--ck-secondary-button-active-box-shadow, var(--hover-box-shadow));\n    }\n  }\n  @media only screen and (max-width: ${defaultTheme.mobileWidth}px) {\n    transition: transform 100ms ease;\n    transform: scale(1);\n    font-size: 17px;\n    &:active {\n    }\n  }\n`;\r\nexport const InnerContainer = styled.div.withConfig({ displayName: \"InnerContainer\", componentId: \"-14t7lkh\" }) `\n  transform: translateZ(0); // Shifting fix\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  max-width: calc(100% - 42px);\n  transition: opacity 300ms ease;\n  /*\n  overflow: hidden;\n  text-overflow: ellipsis;\n  */\n`;\r\nexport const IconContainer = styled(motion.div).withConfig({ displayName: \"IconContainer\", componentId: \"-1ptiqki\" }) `\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  max-width: 20px;\n  max-height: 20px;\n  margin: 0 10px;\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  ${(props) => {\r\n    return (props.$rounded &&\r\n        css `\n        overflow: hidden;\n        border-radius: 5px;\n      `);\r\n}}\n  svg {\n    display: block;\n    position: relative;\n    max-width: 100%;\n    height: auto;\n  }\n`;\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/framer-motion/dist/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/styles/styled/index.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/styled-components/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/constants/defaultTheme.ts"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/components/Common/Button/styles.d.ts","writeByteOrderMark":false,"text":"export declare const SpinnerContainer: any;\r\nexport declare const Arrow: any;\r\nexport declare const ArrowChevron: any;\r\nexport declare const ArrowLine: any;\r\nexport declare const DownloadArrow: any;\r\nexport declare const DownloadArrowInner: any;\r\nexport declare const ButtonContainerInner: any;\r\nexport declare const ButtonContainer: any;\r\nexport declare const InnerContainer: any;\r\nexport declare const IconContainer: any;\r\n"}}
