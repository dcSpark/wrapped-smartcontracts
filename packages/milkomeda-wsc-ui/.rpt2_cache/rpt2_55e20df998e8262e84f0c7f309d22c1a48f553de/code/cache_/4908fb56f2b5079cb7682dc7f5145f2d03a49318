{"code":"import { useAccount } from \"wagmi\";\r\nexport const useConnectCallback = ({ onConnect, onDisconnect }) => {\r\n    useAccount({\r\n        onConnect: ({ address, connector, isReconnected }) => {\r\n            if (!isReconnected) {\r\n                onConnect === null || onConnect === void 0 ? void 0 : onConnect({\r\n                    address: address,\r\n                    connectorId: connector === null || connector === void 0 ? void 0 : connector.id,\r\n                });\r\n            }\r\n        },\r\n        onDisconnect: () => onDisconnect === null || onDisconnect === void 0 ? void 0 : onDisconnect(),\r\n    });\r\n};\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/wagmi/dist/index.d.ts"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/hooks/useConnectCallback.d.ts","writeByteOrderMark":false,"text":"export type useConnectCallbackProps = {\r\n    onConnect?: ({ address, connectorId }: {\r\n        address?: string;\r\n        connectorId?: string;\r\n    }) => void;\r\n    onDisconnect?: () => void;\r\n};\r\nexport declare const useConnectCallback: ({ onConnect, onDisconnect }: useConnectCallbackProps) => void;\r\n"}}
