{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\n// Based on https://hiddedevries.nl/en/blog/2017-01-29-using-javascript-to-trap-focus-in-an-element\r\nimport { useRef, useEffect } from 'react';\r\nconst KEYCODE_TAB = 9;\r\nfunction useFocusTrap() {\r\n    const elRef = useRef(null);\r\n    function handleFocus(e) {\r\n        if (!elRef.current)\r\n            return;\r\n        const focusableEls = elRef.current.querySelectorAll(`\n        a[href]:not(:disabled),\n        button:not(:disabled),\n        textarea:not(:disabled),\n        input[type=\"text\"]:not(:disabled),\n        input[type=\"radio\"]:not(:disabled),\n        input[type=\"checkbox\"]:not(:disabled),\n        select:not(:disabled)\n      `), firstFocusableEl = focusableEls[0], lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n        const isTabPressed = e.key === 'Tab' || e.keyCode === KEYCODE_TAB;\r\n        if (!isTabPressed) {\r\n            return;\r\n        }\r\n        if (e.shiftKey) {\r\n            /* shift + tab */ if (document.activeElement === firstFocusableEl) {\r\n                lastFocusableEl.focus();\r\n                e.preventDefault();\r\n            }\r\n        } /* tab */\r\n        else {\r\n            if (document.activeElement === lastFocusableEl) {\r\n                firstFocusableEl.focus();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (elRef.current) {\r\n            elRef.current.addEventListener('keydown', handleFocus);\r\n            elRef.current.focus({ preventScroll: true });\r\n        }\r\n        return () => {\r\n            if (elRef.current) {\r\n                elRef.current.removeEventListener('keydown', handleFocus);\r\n            }\r\n        };\r\n    }, []);\r\n    return elRef;\r\n}\r\nexport default function FocusTrap(props) {\r\n    const elRef = useFocusTrap();\r\n    useEffect(() => {\r\n        if (!elRef.current)\r\n            return;\r\n        elRef.current.focus({ preventScroll: true });\r\n    }, []);\r\n    return (_jsx(\"div\", { ref: elRef, tabIndex: 0, children: props.children }));\r\n}\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/react/ts5.0/index.d.ts"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/hooks/useFocusTrap.d.ts","writeByteOrderMark":false,"text":"export default function FocusTrap(props: any): import(\"react/jsx-runtime\").JSX.Element;\r\n"}}
