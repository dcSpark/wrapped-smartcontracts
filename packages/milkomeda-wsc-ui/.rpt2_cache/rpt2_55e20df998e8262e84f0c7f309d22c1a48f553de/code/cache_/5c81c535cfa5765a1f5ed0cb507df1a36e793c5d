{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { keyframes } from \"styled-components\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useAccount, useBalance, useNetwork } from \"wagmi\";\r\nimport useIsMounted from \"../../hooks/useIsMounted\";\r\nimport supportedChains from \"../../constants/supportedChains\";\r\nimport ThemedButton from \"../Common/ThemedButton\";\r\nimport { nFormatter } from \"../../utils\";\r\nconst Container = styled(motion.div).withConfig({ displayName: \"Container\", componentId: \"-119o1sg\" }) `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\r\nconst PlaceholderKeyframes = keyframes `\n  0%,100%{ opacity: 0.1; transform: scale(0.75); }\n  50%{ opacity: 0.75; transform: scale(1.2) }\n`;\r\nconst PulseContainer = styled.div.withConfig({ displayName: \"PulseContainer\", componentId: \"-t5xjvl\" }) `\n  pointer-events: none;\n  user-select: none;\n  padding: 0 5px;\n  span {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 2px;\n    width: 3px;\n    height: 3px;\n    border-radius: 4px;\n    background: currentColor;\n    animation: ${PlaceholderKeyframes} 1000ms ease infinite both;\n  }\n`;\r\nexport const Balance = ({ hideIcon, hideSymbol }) => {\r\n    const isMounted = useIsMounted();\r\n    const [isInitial, setIsInitial] = useState(true);\r\n    const { address } = useAccount();\r\n    const { chain } = useNetwork();\r\n    const { data: balance } = useBalance({\r\n        address,\r\n        chainId: chain === null || chain === void 0 ? void 0 : chain.id,\r\n        watch: true,\r\n    });\r\n    const currentChain = supportedChains.find((c) => c.id === (chain === null || chain === void 0 ? void 0 : chain.id));\r\n    const state = `${!isMounted || (balance === null || balance === void 0 ? void 0 : balance.formatted) === undefined\r\n        ? `balance-loading`\r\n        : `balance-${currentChain === null || currentChain === void 0 ? void 0 : currentChain.id}-${balance === null || balance === void 0 ? void 0 : balance.formatted}`}`;\r\n    useEffect(() => {\r\n        setIsInitial(false);\r\n    }, []);\r\n    return (_jsx(\"div\", { style: { position: \"relative\" }, children: _jsx(AnimatePresence, { initial: false, children: _jsx(motion.div, { initial: (balance === null || balance === void 0 ? void 0 : balance.formatted) !== undefined && isInitial\r\n                    ? {\r\n                        opacity: 1,\r\n                    }\r\n                    : { opacity: 0, position: \"absolute\", top: 0, left: 0, bottom: 0 }, animate: { opacity: 1, position: \"relative\" }, exit: {\r\n                    opacity: 0,\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    bottom: 0,\r\n                }, transition: {\r\n                    duration: 0.4,\r\n                    ease: [0.25, 1, 0.5, 1],\r\n                    delay: 0.4,\r\n                }, children: !address || !isMounted || (balance === null || balance === void 0 ? void 0 : balance.formatted) === undefined ? (_jsx(Container, { children: _jsx(\"span\", { style: { minWidth: 32 }, children: _jsxs(PulseContainer, { children: [_jsx(\"span\", { style: { animationDelay: \"0ms\" } }), _jsx(\"span\", { style: { animationDelay: \"50ms\" } }), _jsx(\"span\", { style: { animationDelay: \"100ms\" } })] }) }) })) : (chain === null || chain === void 0 ? void 0 : chain.unsupported) ? (_jsx(Container, { children: _jsx(\"span\", { style: { minWidth: 32 }, children: \"???\" }) })) : (_jsxs(Container, { children: [_jsx(\"span\", { style: { minWidth: 32 }, children: nFormatter(Number(balance === null || balance === void 0 ? void 0 : balance.formatted)) }), !hideSymbol && ` ${balance === null || balance === void 0 ? void 0 : balance.symbol}`] })) }, state) }) }));\r\n};\r\nconst BalanceButton = ({ hideIcon, hideSymbol }) => {\r\n    return (_jsx(ThemedButton, { duration: 0.4, variant: \"secondary\", children: _jsx(Balance, { hideIcon: hideIcon, hideSymbol: hideSymbol }) }));\r\n};\r\nexport default BalanceButton;\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/react/ts5.0/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/styles/styled/index.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/styled-components/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/framer-motion/dist/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/wagmi/dist/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/hooks/useIsMounted.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/constants/supportedChains.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/ThemedButton/index.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/utils/index.ts"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/components/BalanceButton/index.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\ntype BalanceProps = {\r\n    hideIcon?: boolean;\r\n    hideSymbol?: boolean;\r\n};\r\nexport declare const Balance: React.FC<BalanceProps>;\r\ndeclare const BalanceButton: React.FC<BalanceProps>;\r\nexport default BalanceButton;\r\n"}}
