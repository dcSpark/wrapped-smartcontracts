{"code":"import { useEffect } from \"react\";\r\nimport { useContext } from \"../components/ConnectWSC\";\r\nexport const useWSCTransactionConfig = ({ defaultCardanoToken, contractAddress, wscActionCallback, }) => {\r\n    const context = useContext();\r\n    useEffect(() => {\r\n        if (!defaultCardanoToken)\r\n            return;\r\n        if (!contractAddress)\r\n            return;\r\n        if (!wscActionCallback)\r\n            return;\r\n        context.setDefaultCardanoAsset(defaultCardanoToken);\r\n        context.setContractAddress(contractAddress);\r\n        context.setWscAction(wscActionCallback);\r\n    }, []);\r\n};\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/react/ts5.0/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/ConnectWSC.tsx"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/hooks/useWSCTransactionConfig.d.ts","writeByteOrderMark":false,"text":"import { DefaultCardanoAsset } from \"../components/ConnectWSC\";\r\nexport declare const useWSCTransactionConfig: ({ defaultCardanoToken, contractAddress, wscActionCallback, }: {\r\n    defaultCardanoToken: DefaultCardanoAsset | null;\r\n    contractAddress: string;\r\n    wscActionCallback: () => Promise<void>;\r\n}) => void;\r\n"}}
