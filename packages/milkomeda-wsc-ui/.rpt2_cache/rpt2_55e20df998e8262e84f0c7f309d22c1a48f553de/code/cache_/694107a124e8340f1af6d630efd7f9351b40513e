{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport supportedConnectors from \"../../constants/supportedConnectors\";\r\nimport { contentVariants } from \"../Common/Modal\";\r\nimport ConnectWithInjector from \"./ConnectWithInjector\";\r\nimport Alert from \"../Common/Alert\";\r\nconst states = {\r\n    QRCODE: \"qrcode\",\r\n    INJECTOR: \"injector\",\r\n};\r\nconst ConnectUsing = ({ connectorId }) => {\r\n    const [id, setId] = useState(connectorId);\r\n    const connector = supportedConnectors.filter((c) => c.id === id)[0];\r\n    const hasExtensionInstalled = connector.extensionIsInstalled && connector.extensionIsInstalled();\r\n    // If cannot be scanned, display injector flow, which if extension is not installed will show CTA to install it\r\n    const useInjector = !connector.scannable || hasExtensionInstalled;\r\n    const [status, setStatus] = useState(useInjector ? states.INJECTOR : states.QRCODE);\r\n    if (!connector)\r\n        return _jsx(Alert, { children: \"Connector not found\" });\r\n    return (_jsx(AnimatePresence, { children: status === states.INJECTOR && (_jsx(motion.div, { initial: \"initial\", animate: \"animate\", exit: \"exit\", variants: contentVariants, children: _jsx(ConnectWithInjector, { connectorId: id, switchConnectMethod: (id) => {\r\n                    if (id)\r\n                        setId(id);\r\n                    setStatus(states.QRCODE);\r\n                } }) }, states.INJECTOR)) }));\r\n};\r\nexport default ConnectUsing;\r\n","references":["/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/framer-motion/dist/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/node_modules/@types/react/ts5.0/index.d.ts","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/constants/supportedConnectors.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/Modal/index.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/ConnectModal/ConnectWithInjector/index.tsx","/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/src/components/Common/Alert/index.tsx"],"dts":{"name":"/Users/paulclindo/local/dcspark/wrapped-smartcontracts/packages/milkomeda-wsc-ui/build/components/ConnectModal/ConnectUsing.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\ndeclare const ConnectUsing: React.FC<{\r\n    connectorId: string;\r\n}>;\r\nexport default ConnectUsing;\r\n"}}
